{"title":"Python 批量下载图片并合并为 PDF 文件","slug":"pyhton-download-image-and-merge-mages-into-PDF","date":"2020-11-06T11:10:00.000Z","updated":"2020-11-06T11:10:00.000Z","comments":true,"path":"api/articles/pyhton-download-image-and-merge-mages-into-PDF.json","excerpt":null,"covers":null,"content":"<p>Python 代码片段：下载图片文件并合并为 PDF 文件。</p>\n<h2 id=\"代码片段\"><a href=\"#代码片段\" class=\"headerlink\" title=\"代码片段\"></a>代码片段</h2><p>批量下载图片到指定目录</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> os<br><span class=\"hljs-keyword\">import</span> requests<br><br>start_page = <span class=\"hljs-number\">1</span><br>end_page = <span class=\"hljs-number\">100</span><br>source_id = <span class=\"hljs-string\">&#x27;1384001302181&#x27;</span><br>dir_name = <span class=\"hljs-string\">&#x27;download save path&#x27;</span><br>url_prefix = <span class=\"hljs-string\">f&#x27;https://xxx.xxx.xxx.cn/<span class=\"hljs-subst\">&#123;source_id&#125;</span>/files/mobile/&#x27;</span><br>image_links = [url_prefix + <span class=\"hljs-built_in\">str</span>(i) + <span class=\"hljs-string\">&#x27;.jpg&#x27;</span> <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(start_page, end_page + <span class=\"hljs-number\">1</span>)]<br>save_dir = os.path.join(os.getcwd(), dir_name)<br><span class=\"hljs-comment\"># print(image_links)</span><br><br><span class=\"hljs-comment\"># test </span><br>img_urls = [<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1719937050814-72892488f741&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1720048171527-208cb3e93192&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1734409019142-1927557a77b9&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1734108039189-f6c123288381&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1734268486202-7e85b12a7fa2&#x27;</span>,<br>]<br><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">download_image</span>(<span class=\"hljs-params\">url, save_path</span>):<br>    content_type_map = &#123;<br>        <span class=\"hljs-string\">&#x27;image/jpeg&#x27;</span>: <span class=\"hljs-string\">&#x27;jpg&#x27;</span>,<br>        <span class=\"hljs-string\">&#x27;image/png&#x27;</span>: <span class=\"hljs-string\">&#x27;png&#x27;</span>,<br>        <span class=\"hljs-string\">&#x27;image/gif&#x27;</span>: <span class=\"hljs-string\">&#x27;gif&#x27;</span>,<br>        <span class=\"hljs-string\">&#x27;image/webp&#x27;</span>: <span class=\"hljs-string\">&#x27;webp&#x27;</span>,<br>        <span class=\"hljs-string\">&#x27;image/svg+xml&#x27;</span>: <span class=\"hljs-string\">&#x27;svg&#x27;</span>,<br>    &#125;<br>    <span class=\"hljs-keyword\">try</span>:<br>        response = requests.get(url, stream=<span class=\"hljs-literal\">True</span>)<br>        response.raise_for_status()  <span class=\"hljs-comment\"># 抛出异常处理 HTTP 错误</span><br>        <span class=\"hljs-built_in\">print</span>(response.headers)<br>        save_path = save_path.endswith(<span class=\"hljs-string\">&#x27;.&#x27;</span>) <span class=\"hljs-keyword\">and</span> save_path <span class=\"hljs-keyword\">or</span> save_path + <span class=\"hljs-string\">&#x27;.&#x27;</span> + content_type_map[response.headers[<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>]];<br>        <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(save_path, <span class=\"hljs-string\">&#x27;wb&#x27;</span>) <span class=\"hljs-keyword\">as</span> f:<br>            <span class=\"hljs-keyword\">for</span> chunk <span class=\"hljs-keyword\">in</span> response.iter_content(<span class=\"hljs-number\">1024</span>):<br>                f.write(chunk)<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Image downloaded: <span class=\"hljs-subst\">&#123;save_path&#125;</span>&quot;</span>)<br>    <span class=\"hljs-keyword\">except</span> requests.exceptions.RequestException <span class=\"hljs-keyword\">as</span> e:<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Error downloading image <span class=\"hljs-subst\">&#123;url&#125;</span>: <span class=\"hljs-subst\">&#123;e&#125;</span>&quot;</span>)<br><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">not</span> os.path.exists(save_dir)):<br>    os.makedirs(save_dir);<br><br><span class=\"hljs-keyword\">for</span> index, url <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(image_links):<br>    file_name = url[url.rfind(<span class=\"hljs-string\">&#x27;/&#x27;</span>) + <span class=\"hljs-number\">1</span>:]<br>    save_path = os.path.join(os.getcwd(), dir_name, file_name)<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&#x27;download: <span class=\"hljs-subst\">&#123;url&#125;</span> to <span class=\"hljs-subst\">&#123;dir_name&#125;</span>/<span class=\"hljs-subst\">&#123;file_name&#125;</span>&#x27;</span>)<br>    download_image(url, save_path)<br></code></pre></td></tr></table></figure>\n\n<p>将某个目录下的图片合并为 PDF 文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> os<br><span class=\"hljs-keyword\">import</span> re<br><br><span class=\"hljs-keyword\">from</span> fpdf <span class=\"hljs-keyword\">import</span> FPDF<br><span class=\"hljs-keyword\">from</span> PIL <span class=\"hljs-keyword\">import</span> Image<br><br>book_name = <span class=\"hljs-string\">&quot;PDF BOOK NAME&quot;</span>;<br>book_images_dir = <span class=\"hljs-string\">&quot;images_dir&quot;</span>;<br><br>pdf = FPDF(orientation=<span class=\"hljs-string\">&#x27;P&#x27;</span>, unit=<span class=\"hljs-string\">&#x27;mm&#x27;</span>, <span class=\"hljs-built_in\">format</span>=<span class=\"hljs-string\">&#x27;A4&#x27;</span>)<br>pdf.set_auto_page_break(<span class=\"hljs-number\">0</span>)      <span class=\"hljs-comment\"># 自动分页设为 False</span><br>image_path = os.path.join(os.getcwd(), book_images_dir, book_name) <br>image_list = [f <span class=\"hljs-keyword\">for</span> f <span class=\"hljs-keyword\">in</span> os.listdir(image_path) <span class=\"hljs-keyword\">if</span> f.lower().endswith((<span class=\"hljs-string\">&#x27;.png&#x27;</span>, <span class=\"hljs-string\">&#x27;.jpg&#x27;</span>, <span class=\"hljs-string\">&#x27;.jpeg&#x27;</span>))]<br>image_list.sort(key=<span class=\"hljs-keyword\">lambda</span> l: <span class=\"hljs-built_in\">int</span>(re.findall(<span class=\"hljs-string\">r&#x27;\\d+&#x27;</span>, l)[<span class=\"hljs-number\">0</span>]))<br><br><span class=\"hljs-built_in\">print</span>(pdf.w, pdf.h)<br><span class=\"hljs-built_in\">print</span>(image_path)<br><br><span class=\"hljs-keyword\">for</span> image_name <span class=\"hljs-keyword\">in</span> image_list:<br>    pdf.add_page()<br>    img_path = os.path.join(image_path, image_name)<br>    image = Image.<span class=\"hljs-built_in\">open</span>(img_path)<br>    ratio = pdf.w / image.width<br>    image.thumbnail((pdf.w, image.height * ratio))<br>    img_width, img_height = image.size<br>    <span class=\"hljs-comment\"># pdf.image(img_path, x=(pdf.w - img_width) / 2, y=(pdf.h - img_height) / 2, w=img_width, h=img_height)</span><br>    pdf.image(img_path, x=(pdf.w - img_width) / <span class=\"hljs-number\">2</span>, y=(pdf.h - img_height) / <span class=\"hljs-number\">2</span>, w=img_width, h=img_height)<br><br>pdf.output(os.path.join(os.getcwd(), <span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">&#123;book_name&#125;</span>.pdf&quot;</span>), <span class=\"hljs-string\">&quot;F&quot;</span>)<br></code></pre></td></tr></table></figure>\n\n","more":"<p>Python 代码片段：下载图片文件并合并为 PDF 文件。</p>\n<h2 id=\"代码片段\"><a href=\"#代码片段\" class=\"headerlink\" title=\"代码片段\"></a>代码片段</h2><p>批量下载图片到指定目录</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> os<br><span class=\"hljs-keyword\">import</span> requests<br><br>start_page = <span class=\"hljs-number\">1</span><br>end_page = <span class=\"hljs-number\">100</span><br>source_id = <span class=\"hljs-string\">&#x27;1384001302181&#x27;</span><br>dir_name = <span class=\"hljs-string\">&#x27;download save path&#x27;</span><br>url_prefix = <span class=\"hljs-string\">f&#x27;https://xxx.xxx.xxx.cn/<span class=\"hljs-subst\">&#123;source_id&#125;</span>/files/mobile/&#x27;</span><br>image_links = [url_prefix + <span class=\"hljs-built_in\">str</span>(i) + <span class=\"hljs-string\">&#x27;.jpg&#x27;</span> <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(start_page, end_page + <span class=\"hljs-number\">1</span>)]<br>save_dir = os.path.join(os.getcwd(), dir_name)<br><span class=\"hljs-comment\"># print(image_links)</span><br><br><span class=\"hljs-comment\"># test </span><br>img_urls = [<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1719937050814-72892488f741&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1720048171527-208cb3e93192&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1734409019142-1927557a77b9&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1734108039189-f6c123288381&#x27;</span>,<br>    <span class=\"hljs-string\">&#x27;https://images.unsplash.com/photo-1734268486202-7e85b12a7fa2&#x27;</span>,<br>]<br><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title function_\">download_image</span>(<span class=\"hljs-params\">url, save_path</span>):<br>    content_type_map = &#123;<br>        <span class=\"hljs-string\">&#x27;image/jpeg&#x27;</span>: <span class=\"hljs-string\">&#x27;jpg&#x27;</span>,<br>        <span class=\"hljs-string\">&#x27;image/png&#x27;</span>: <span class=\"hljs-string\">&#x27;png&#x27;</span>,<br>        <span class=\"hljs-string\">&#x27;image/gif&#x27;</span>: <span class=\"hljs-string\">&#x27;gif&#x27;</span>,<br>        <span class=\"hljs-string\">&#x27;image/webp&#x27;</span>: <span class=\"hljs-string\">&#x27;webp&#x27;</span>,<br>        <span class=\"hljs-string\">&#x27;image/svg+xml&#x27;</span>: <span class=\"hljs-string\">&#x27;svg&#x27;</span>,<br>    &#125;<br>    <span class=\"hljs-keyword\">try</span>:<br>        response = requests.get(url, stream=<span class=\"hljs-literal\">True</span>)<br>        response.raise_for_status()  <span class=\"hljs-comment\"># 抛出异常处理 HTTP 错误</span><br>        <span class=\"hljs-built_in\">print</span>(response.headers)<br>        save_path = save_path.endswith(<span class=\"hljs-string\">&#x27;.&#x27;</span>) <span class=\"hljs-keyword\">and</span> save_path <span class=\"hljs-keyword\">or</span> save_path + <span class=\"hljs-string\">&#x27;.&#x27;</span> + content_type_map[response.headers[<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>]];<br>        <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(save_path, <span class=\"hljs-string\">&#x27;wb&#x27;</span>) <span class=\"hljs-keyword\">as</span> f:<br>            <span class=\"hljs-keyword\">for</span> chunk <span class=\"hljs-keyword\">in</span> response.iter_content(<span class=\"hljs-number\">1024</span>):<br>                f.write(chunk)<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Image downloaded: <span class=\"hljs-subst\">&#123;save_path&#125;</span>&quot;</span>)<br>    <span class=\"hljs-keyword\">except</span> requests.exceptions.RequestException <span class=\"hljs-keyword\">as</span> e:<br>        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&quot;Error downloading image <span class=\"hljs-subst\">&#123;url&#125;</span>: <span class=\"hljs-subst\">&#123;e&#125;</span>&quot;</span>)<br><br><span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">not</span> os.path.exists(save_dir)):<br>    os.makedirs(save_dir);<br><br><span class=\"hljs-keyword\">for</span> index, url <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">enumerate</span>(image_links):<br>    file_name = url[url.rfind(<span class=\"hljs-string\">&#x27;/&#x27;</span>) + <span class=\"hljs-number\">1</span>:]<br>    save_path = os.path.join(os.getcwd(), dir_name, file_name)<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">f&#x27;download: <span class=\"hljs-subst\">&#123;url&#125;</span> to <span class=\"hljs-subst\">&#123;dir_name&#125;</span>/<span class=\"hljs-subst\">&#123;file_name&#125;</span>&#x27;</span>)<br>    download_image(url, save_path)<br></code></pre></td></tr></table></figure>\n\n<p>将某个目录下的图片合并为 PDF 文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> os<br><span class=\"hljs-keyword\">import</span> re<br><br><span class=\"hljs-keyword\">from</span> fpdf <span class=\"hljs-keyword\">import</span> FPDF<br><span class=\"hljs-keyword\">from</span> PIL <span class=\"hljs-keyword\">import</span> Image<br><br>book_name = <span class=\"hljs-string\">&quot;PDF BOOK NAME&quot;</span>;<br>book_images_dir = <span class=\"hljs-string\">&quot;images_dir&quot;</span>;<br><br>pdf = FPDF(orientation=<span class=\"hljs-string\">&#x27;P&#x27;</span>, unit=<span class=\"hljs-string\">&#x27;mm&#x27;</span>, <span class=\"hljs-built_in\">format</span>=<span class=\"hljs-string\">&#x27;A4&#x27;</span>)<br>pdf.set_auto_page_break(<span class=\"hljs-number\">0</span>)      <span class=\"hljs-comment\"># 自动分页设为 False</span><br>image_path = os.path.join(os.getcwd(), book_images_dir, book_name) <br>image_list = [f <span class=\"hljs-keyword\">for</span> f <span class=\"hljs-keyword\">in</span> os.listdir(image_path) <span class=\"hljs-keyword\">if</span> f.lower().endswith((<span class=\"hljs-string\">&#x27;.png&#x27;</span>, <span class=\"hljs-string\">&#x27;.jpg&#x27;</span>, <span class=\"hljs-string\">&#x27;.jpeg&#x27;</span>))]<br>image_list.sort(key=<span class=\"hljs-keyword\">lambda</span> l: <span class=\"hljs-built_in\">int</span>(re.findall(<span class=\"hljs-string\">r&#x27;\\d+&#x27;</span>, l)[<span class=\"hljs-number\">0</span>]))<br><br><span class=\"hljs-built_in\">print</span>(pdf.w, pdf.h)<br><span class=\"hljs-built_in\">print</span>(image_path)<br><br><span class=\"hljs-keyword\">for</span> image_name <span class=\"hljs-keyword\">in</span> image_list:<br>    pdf.add_page()<br>    img_path = os.path.join(image_path, image_name)<br>    image = Image.<span class=\"hljs-built_in\">open</span>(img_path)<br>    ratio = pdf.w / image.width<br>    image.thumbnail((pdf.w, image.height * ratio))<br>    img_width, img_height = image.size<br>    <span class=\"hljs-comment\"># pdf.image(img_path, x=(pdf.w - img_width) / 2, y=(pdf.h - img_height) / 2, w=img_width, h=img_height)</span><br>    pdf.image(img_path, x=(pdf.w - img_width) / <span class=\"hljs-number\">2</span>, y=(pdf.h - img_height) / <span class=\"hljs-number\">2</span>, w=img_width, h=img_height)<br><br>pdf.output(os.path.join(os.getcwd(), <span class=\"hljs-string\">f&quot;<span class=\"hljs-subst\">&#123;book_name&#125;</span>.pdf&quot;</span>), <span class=\"hljs-string\">&quot;F&quot;</span>)<br></code></pre></td></tr></table></figure>\n\n","categories":[{"name":"Python","path":"api/categories/Python.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"}]}